<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on Terminal</title>
    <link>https://caiwp.github.io/tags/linux/</link>
    <description>Recent content in Linux on Terminal</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 08 May 2020 15:20:54 +0800</lastBuildDate>
    
	<atom:link href="https://caiwp.github.io/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sed命令</title>
      <link>https://caiwp.github.io/post/sed%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Fri, 08 May 2020 15:20:54 +0800</pubDate>
      
      <guid>https://caiwp.github.io/post/sed%E5%91%BD%E4%BB%A4/</guid>
      <description>参考链接 https://www.runoob.com/linux/linux-comm-sed.html
直接替换文件内容 sed -i &#39;s/108/581/g&#39; *.json 在每行的头添加字符，比如&amp;quot;HEAD&amp;quot;，命令如下： sed &#39;s/^/HEAD&amp;amp;/g&#39; test.file 在每行的行尾添加字符，比如“TAIL”，命令如下： sed &#39;s/$/&amp;amp;TAIL/g&#39; test.file 替换第2个值 sed -i &#39;s/108/581/2&#39; test.sh  </description>
    </item>
    
    <item>
      <title>快速删除</title>
      <link>https://caiwp.github.io/post/%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4/</link>
      <pubDate>Thu, 09 Apr 2020 11:17:37 +0800</pubDate>
      
      <guid>https://caiwp.github.io/post/%E5%BF%AB%E9%80%9F%E5%88%A0%E9%99%A4/</guid>
      <description>参考链接 https://blog.csdn.net/liuxiao723846/article/details/51626305
1）先建立一个空目录
mkdir/data/blank
2）用rsync删除目标目录
rsync &amp;ndash;delete-before -d /data/blank/ /var/spool/clientmqueue/</description>
    </item>
    
    <item>
      <title>Mac制作linux启动盘</title>
      <link>https://caiwp.github.io/post/mac%E5%88%B6%E4%BD%9Clinux%E5%90%AF%E5%8A%A8%E7%9B%98/</link>
      <pubDate>Tue, 26 Nov 2019 17:35:32 +0800</pubDate>
      
      <guid>https://caiwp.github.io/post/mac%E5%88%B6%E4%BD%9Clinux%E5%90%AF%E5%8A%A8%E7%9B%98/</guid>
      <description># 列出并找出盘 diskutil list # 取消挂载 diskutil umountDisk disk4 # 写入 sudo dd if=ubuntu-17.10-desktop-amd64.iso of=/dev/disk4 bs=1m  </description>
    </item>
    
    <item>
      <title>Linux命令sort</title>
      <link>https://caiwp.github.io/post/linux%E5%91%BD%E4%BB%A4sort/</link>
      <pubDate>Tue, 05 Nov 2019 15:45:00 +0800</pubDate>
      
      <guid>https://caiwp.github.io/post/linux%E5%91%BD%E4%BB%A4sort/</guid>
      <description>参考链接 https://www.cnblogs.com/coderchuanyu/p/4194211.html
忽略相同行使用-u选项或者uniq
只显示单一行： uniq -u file.txt sort file.txt | uniq -u 统计各行在文件中出现的次数： sort file.txt | uniq -c 在文件中找出重复的行： sort file.txt | uniq -d  </description>
    </item>
    
    <item>
      <title>Linux命令awk</title>
      <link>https://caiwp.github.io/post/linux%E5%91%BD%E4%BB%A4awk/</link>
      <pubDate>Tue, 05 Nov 2019 15:44:55 +0800</pubDate>
      
      <guid>https://caiwp.github.io/post/linux%E5%91%BD%E4%BB%A4awk/</guid>
      <description>参考链接 https://www.runoob.com/linux/linux-comm-awk.html
每行按空格或TAB分割，输出文本中的1、4项 awk &#39;{print $1,$4}&#39; log.txt 使用&amp;quot;,&amp;quot;分割 awk -F, &#39;{print $1,$2}&#39; log.txt if 条件 awk &#39;{if ($1==1) print &amp;quot;A&amp;quot;; else if ($1==2) print &amp;quot;B&amp;quot;; else print &amp;quot;C&amp;quot;}&#39;  </description>
    </item>
    
    <item>
      <title>Linux命令pkill</title>
      <link>https://caiwp.github.io/post/linux%E5%91%BD%E4%BB%A4pkill/</link>
      <pubDate>Fri, 01 Nov 2019 15:47:45 +0800</pubDate>
      
      <guid>https://caiwp.github.io/post/linux%E5%91%BD%E4%BB%A4pkill/</guid>
      <description>https://man.linuxde.net/pkill
pkill命令可以按照进程名杀死进程。会全部杀掉。
pkill (选项) (参数) -o：仅向找到的最小（起始）进程号发送信号； -n：仅向找到的最大（结束）进程号发送信号； -P：指定父进程号发送信号； -g：指定进程组； -t：指定开启进程的终端。  </description>
    </item>
    
    <item>
      <title>Linux命令pgrep</title>
      <link>https://caiwp.github.io/post/linux%E5%91%BD%E4%BB%A4pgrep/</link>
      <pubDate>Fri, 01 Nov 2019 15:30:37 +0800</pubDate>
      
      <guid>https://caiwp.github.io/post/linux%E5%91%BD%E4%BB%A4pgrep/</guid>
      <description>https://man.linuxde.net/pgrep
pgrep (选项) (参数) -o：仅显示找到的最小（起始）进程号； -n：仅显示找到的最大（结束）进程号； -l：显示进程名称； -P：指定父进程号； -g：指定进程组； -t：指定开启进程的终端； -u：指定进程的有效用户ID。  </description>
    </item>
    
  </channel>
</rss>